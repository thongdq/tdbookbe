plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.flywaydb.flyway' version '7.7.0'
}

group = 'td.book'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

repositories {
	mavenCentral()
}

configurations {
	dev
}

dependencies {
	implementation      'org.springframework.boot:spring-boot-starter-web'
	implementation      'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation      'org.springframework.boot:spring-boot-starter-security'
	implementation      'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation      'io.jsonwebtoken:jjwt:0.9.1'
	implementation      'org.hibernate.validator:hibernate-validator'
	//to auto reload source
	developmentOnly     'org.springframework.boot:spring-boot-devtools'
	testImplementation  'org.springframework.boot:spring-boot-starter-test'
	implementation      'org.springframework.security:spring-security-test'
	implementation      'org.postgresql:postgresql'
	compile             'org.flywaydb:flyway-core'
	compileOnly         'org.projectlombok:lombok:1.18.16'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'
}

test {
	useJUnitPlatform()
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/tdbook'
	user = 'postgres'
	password = 'root'
}

// we need to build classes before we can migrate
flywayMigrate.dependsOn classes

//https://dzone.com/articles/continuous-auto-restart-with-spring-boot-devtools
bootRun {
    // Use Spring Boot DevTool only when we run Gradle bootRun task
    classpath = sourceSets.main.runtimeClasspath + configurations.dev
}
